
package tests

import oop.car.Car
import org.scalatest.FunSuite

class TestCar extends FunSuite {
  test("") {
    val car: Car = new Car()
    assert(car.speed == 0)
    car.shiftToReverse()
    car.accelerate()
    assert(car.speed == -5)
    car.shiftToDrive()
    assert(car.speed == -5)
    car.accelerate()
    assert(car.speed == -10)
    car.brake()
    assert(car.speed == 0)
    car.shiftToDrive()
    car.accelerate()
    assert(car.speed == -5)
    car.shiftToReverse()
    assert(car.speed == -5)
    car.accelerate()
    assert(car.speed == -10)
    car.accelerate()
    assert(car.speed == -15)
    car.shiftToPark()
    assert(car.speed == -15)
    car.brake()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == -5)
    car.brake()
    assert(car.speed == 0)
    car.shiftToPark()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == 0)
    car.shiftToReverse()
    car.accelerate()
    assert(car.speed == -5)
    car.shiftToDrive()
    assert(car.speed == -5)
    car.accelerate()
    assert(car.speed == -10)
    car.accelerate()
    assert(car.speed == -15)
    car.shiftToPark()
    assert(car.speed == -15)
    car.brake()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == -5)
    car.brake()
    assert(car.speed == 0)
    car.shiftToPark()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == 0)
    assert(car.speed == 0)
    car.shiftToReverse()
    car.accelerate()
    assert(car.speed == -5)
    car.shiftToDrive()
    assert(car.speed == -5)
    car.accelerate()
    assert(car.speed == -10)
    car.accelerate()
    assert(car.speed == -15)
    car.shiftToPark()
    assert(car.speed == -15)
    car.brake()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == -5)
    car.brake()
    assert(car.speed == 0)
    car.shiftToPark()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == 0)
    car.brake()
    assert(car.speed == 0)
    car.shiftToDrive()
    car.accelerate()
    assert(car.speed == 10)
    car.shiftToReverse()
    assert(car.speed == 10)
    car.accelerate()
    assert(car.speed == 20)
    car.accelerate()
    assert(car.speed == 30)
    car.shiftToPark()
    assert(car.speed == 30)
    car.brake()
    assert(car.speed == 0)
    car.shiftToDrive()
    car.accelerate()
    assert(car.speed == 10)
    car.shiftToReverse()
    car.shiftToPark()
    assert(car.speed == 10)
    car.accelerate()
    car.shiftToPark()
    assert(car.speed == 20)
    car.shiftToReverse()
    car.accelerate()
    assert(car.speed == 30)
    car.shiftToDrive()
    assert(car.speed == 30)
    car.accelerate()
    assert(car.speed == 40)
    car.accelerate()
    assert(car.speed == 50)
    car.shiftToPark()
    assert(car.speed == 50)
    car.brake()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == 10)
    car.brake()
    assert(car.speed == 0)
    car.shiftToPark()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == 0)
    car.accelerate()
    assert(car.speed == -0)
    car.brake()
    assert(car.speed == 0)
    car.shiftToDrive()
    car.accelerate()
    assert(car.speed == 10)
    car.shiftToReverse()
    car.shiftToPark()
    assert(car.speed == 10)
    car.accelerate()
    car.shiftToPark()
    assert(car.speed == 20)
    car.accelerate()
    assert(car.speed == 30)
    car.shiftToPark()
    assert(car.speed == 30)
    car.shiftToReverse()
    car.accelerate()
    assert(car.speed == 40)
    car.brake()
    assert(car.speed == 0)
    car.accelerate()
    car.shiftToDrive()
    car.accelerate()
    assert(car.speed == 20)
    car.brake()
    assert(car.speed == 0)
    car.shiftToPark()
    assert(car.speed == 0)
    car.accelerate()
  }
}